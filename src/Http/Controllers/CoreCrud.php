<?php
/**
 * Created by PhpStorm.
 * User: keithwatanabe
 * Date: 10/13/15
 * Time: 10:46 AM
 */

use App\Http\Requests\Request;
use Jackhammer\Http\Controllers;

/**
 * Provides basic CRUD functionality utilizing
 * Repositories generated by Jachammer. These functions
 * can be expanded in controllers that utilize the data returned
 *
 * Class CoreCrud
 */
trait CoreCrud {

    /**
     * @param Request $request
     * @return mixed
     */
    protected function _create(Request $request){
        return $this->repository->create($request->all());
    }

    /**
     * @param int $id
     * @return mixed
     */
    protected function _destroy($id){
        if ($item = $this->repository->find($id)){
            if ($this->repository->delete($id)){
                return $item;
            }
        }
        return null;
    }

    /**
     * @param int $id
     * @return mixed
     */
    public function edit($id){
        return $this->show($id);
    }

    /**
     * Simple/ignorant grab of everything
     *
     * @return mixed
     */
    public function index(){
        return $this->repository->load();
    }

    /**
     * @param int $id
     * @return mixed
     */
    public function show($id){
        if ($item = $this->repository->find($id)){
            return $item;
        }
        return null;
    }

    /**
     * Just passes everything into the update. If there's a stricter
     * requirement,
     *
     * @param Request $request
     * @param $id
     * @return mixed
     */
    public function update(Request $request, $id){
        if ($this->repository->find($id)){
            return $this->repository->update($id, $request->all());
        }
        return null;
    }
}